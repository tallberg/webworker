<style>div {font-family: 'Courier New', Courier, monospace} progress{height:5px;}</style>
<div>
    <div id="out"></div>
    <progress value="0" max="1" id="progress"></progress>
    <div id="current"></div>
</div>
<script>
const out = document.getElementById('out');;
const current = document.getElementById('current');
const progress = document.getElementById('progress');

class Feeder {
    _current;  // current count for current length
    _alphabet; // given characters
    _len; // output length
    _base; // alphabet length
    _max; // nr of outputs for current length (used for stats)
    constructor(alpha){
        this._alphabet = alpha;
        this._current = 0;
        this._len = 1;
        this._base = alpha.length;
        this._max = Math.pow(this._base, this._len + 1) - 1;
    }
    _fromInt = (i) => {
        let result = '';
        let rest = 0;
        for(let pos = this._len; pos >= 0; pos--) {
            let rest = i % this._base;
            result = this._alphabet[rest] + result;
            i = ~~(i / this._base);
        }
        if(i !== 0){
            result += this._alphabet[0];
            this._current = 0;
            this._len++
            this._max = Math.pow(this._base, this._len + 1) - 1; 
        }
        return result;
    }
    next = () => {
        return this._fromInt(this._current++);
    }
    current = () => this._fromInt(this._current);
    progress = () => {
        return { 'current' : this._current, 'max': this._max, 'percent': this._current / this._max };
    }
    reset = () => this._current = 0;
}

// const target = '2804890A4B43E24D922447DDAAAD3B2A'; //FFF
// const target = '722A5443E3B3EE1B5DA271AE9F477F10'; //FFFF
const target = '5A554D4B4CC04DFED2311CFE2AA544B2'; //FFFFF
let found = false;

//const feeder = new Feeder('0123456789ABCDEF');
const feeder = new Feeder('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');
const ww1 = new Worker('worker.js');
const ww2 = new Worker('worker.js');
const ww3 = new Worker('worker.js');
const ww4 = new Worker('worker.js');

const startTime = new Date;
ww1.postMessage(feeder.next());
ww2.postMessage(feeder.next());
ww3.postMessage(feeder.next());
ww4.postMessage(feeder.next());

let lastVal = 0;
let progressInterval = setInterval(function(){
    const prog = feeder.progress();
    progress.value = prog.percent;
    current.innerText = feeder.current() + ' ' + 2 * (prog.current - lastVal) + '#/s';
    lastVal = prog.current;
}, 500);

testResult = function(data) {
    let result = data[1];
    if(result !== target) { 
	    return false;
	}
	const endTime = new Date
	found = true;
	let plaintext = data[0];
	out.innerHTML = `<h3>${plaintext.join ? plaintext.join('') : plaintext}</h3><p>${endTime - startTime}ms</p>`;
	clearInterval(progressInterval);
	return true;
}

ww1.onmessage = function(e) {
    testResult(e.data) || found ? ww1.terminate() : ww1.postMessage(feeder.next());
}
ww2.onmessage = function(e) {
    testResult(e.data) || found ? ww2.terminate() : ww2.postMessage(feeder.next());
}
ww3.onmessage = function(e) {
    testResult(e.data) || found ? ww3.terminate() : ww3.postMessage(feeder.next());
}
ww4.onmessage = function(e) {
    testResult(e.data) || found ? ww4.terminate() : ww4.postMessage(feeder.next());
}

</script>
